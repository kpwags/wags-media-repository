<div class="table-subtitle">
    <h2>Completed</h2>
</div>

<table class="data-table video-games-table completed">
    <thead>
    <tr>
        <th class="title">Title</th>
        <th class="system">System</th>
        <th class="date">Date Completed</th>
        <th class="rating">Rating</th>
        <th class="actions">Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var videoGame in VideoGames)
    {
        <tr>
            <td><a href="@videoGame.Link" target="_blank" rel="noreferrer nofollow">@videoGame.Title</a></td>
            <td>
                <div class="tag-cell centered">
                    @foreach (var system in videoGame.Systems)
                    {
                        <span class="tag" style="background-color:@system.ColorCode;">@system.Name</span>
                    }
                </div>
            </td>
            <td class="centered">@videoGame.DateCompleted?.ToString("M/d/yyyy")</td>
            <td class="centered">
                @if (videoGame.Rating > 0)
                {
                    <StarRating Rating="@videoGame.Rating" />
                }
                else
                {
                    <span>N/A</span>
                }
            </td>
            <td class="centered actions">
                <a href="/video-games/edit/@videoGame.VideoGameId">Edit</a>
                <button type="button" class="link-button" @onclick="@(_ => DeleteVideoGame(videoGame))">Delete</button>
            </td>
        </tr>
    }
    @if (VideoGames.Count == 0)
    {
        <tr>
            <td colspan="7" class="centered no-data"><em>No Video Games Completed</em></td>
        </tr>
    }
    </tbody>
</table>

@code {
    [Parameter, EditorRequired] public IReadOnlyCollection<VideoGameApiModel> VideoGames { get; set; } = [];
    
    [Parameter, EditorRequired] public EventCallback<VideoGameApiModel> OnDelete { get; set; }
    
    private async Task DeleteVideoGame(VideoGameApiModel game) => await OnDelete.InvokeAsync(game);
}