@using WagsMediaRepository.Web.Handlers.Commands.Music

<EditForm EditContext="_editContext" OnSubmit="@SubmitForm" FormName="music-genre-form">
    <DataAnnotationsValidator/>
    
    <div class="track-form-header">
        <h3>Tracks</h3>
        <button class="button-primary" type="button" @onclick="AddTrack">Add Track</button>
    </div>

    <hr />

    <fieldset disabled="@_isProcessing" aria-busy="@_isProcessing">
        @foreach (var track in _model.Tracks)
        {
            <div class="album-track">
                <InputNumber @bind-Value="@track.MusicAlbumTrackId" class="hidden"></InputNumber>
                
                <div class="track-number form-field">
                    <label for="page-count">
                        Track #
                        <InputNumber id="@($"track-number-{Guid.NewGuid()}")" @bind-Value="@track.TrackNumber" />
                        <ValidationMessage For="@(() => track.TrackNumber)"></ValidationMessage>
                    </label>
                </div>

                <div class="track-title form-field">
                    <label for="track-title">
                        Title
                        <InputText type="text" id="@($"track-title-{Guid.NewGuid()}")" @bind-Value="@track.Title" />
                        <ValidationMessage For="@(() => track.Title)"></ValidationMessage>
                    </label>
                </div>
                
                <div class="track-action">
                    <button type="button" class="button-primary danger" disabled="@(_model.Tracks.Count == 1)">Delete</button>
                </div>
            </div>
        }
        
        <div class="form-field form-actions">
            <button type="submit">Save</button>
            <a href="/music/" class="button-ghost">Cancel</a>
        </div>
    </fieldset>
</EditForm>

@code {
    private bool _isProcessing;
    private string _pageError = string.Empty;
    private EditContext? _editContext;
    private SaveAlbumTracks.Request _model = new();
    
    [Parameter, EditorRequired] public MusicAlbumApiModel Album { get; set; } = new();
    
    protected override void OnInitialized()
    {
        _model = new()
        {
            MusicAlbumId = Album.MusicAlbumId,
            Tracks = Album.Tracks.Count > 0 ? Album.Tracks.ToList() : [new() { TrackNumber = 1 }],
        };
        
        _editContext = new EditContext(_model);
    }

    private void AddTrack()
    {
        var trackNumbers = _model.Tracks.Select(t => t.TrackNumber).ToList();

        var maxTrackNumber = trackNumbers.Max();
        
        _model.Tracks.Add(new()
        {
            TrackNumber = maxTrackNumber + 1,
        });
    }

    private async Task RemoveTrack(MusicAlbumTrackApiModel track)
    {
        if (track.MusicAlbumTrackId > 0)
        {
            // TODO
            _model.Tracks = _model.Tracks.Where(t => t.MusicAlbumTrackId != track.MusicAlbumTrackId).ToList();

            await Mediator.Send(new DeleteAlbumTrack.Request(track.MusicAlbumTrackId));
        }
        else
        {
            _model.Tracks = _model.Tracks.Where(t => t.TrackNumber != track.TrackNumber).ToList();
        }
    }
    
    private async Task SubmitForm()
    {
        _isProcessing = true;
        
        var result = await Mediator.Send(_model);
        
        if (!result.IsSuccessful)
        {
            _pageError = result.ErrorMessage;
            _isProcessing = false;
            return;
        }
        
        NavManager.NavigateTo("/music/", true);
    }
}